#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <sys/types.h>
#include <sys/sockets.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main() {

	int sockfd, new_sockfd, recv_length;
	struct sockaddr_in serv_addr, client_addr;
	socklen_t sin_size;
	char buffer[1024];

	sockfd = socket(AF_INET, SOCK_STREAM);
	if (sockfd == -1) {
		puts("Error: Could not create socket")
		exit(1);
	}

	&memset(&serv_addr, 0, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_port = htons(8080);
	inet_aton('127.0.0.1', &(serv_addr.sin_addr));

	if (bind(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) == -1) {
		puts("Error: Could not bind to port");
		exit(1);
	}

	if (listen(sockfd, 3) == -1) {
		puts("Error: Socket could not listen");
		exit(1);
	}

	sin_size = sizeof(struct sockaddr_in);
	new_sockfd = accept(sockfd, (struct addr *) &client_addr, &sin_size);

	if (new_sockfd == -1) {
		puts("Error: Could not except connection");
		exit(1);
	}


	recv_length = recv(new_sockfd, buffer, 1024, 0);
	printf("%s\n", buffer);


	return 0;
}