#!/usr/bin/python3
########################################
## Created by Maximillian A. Campbell ##
########################################

# ======= Modules =======
import sys
import requests
import time

# ======= Variables =======
URL = ""
WORDLIST = ""
OUTPUT_FILE = ""
WHITE_LIST = [200, 204, 301, 302, 307, 401, 403]
# ======= Functions =======
def usage():
    """
    Usage statement
    """
    print("usage: ./dir-scanner [URL] [OPTIONS]...[ -h | -w ]\n" + 
          "options:\n" + 
          "\t-h : Display this help message\n" +
          "\t-w : Wordlist\n" +
          "\t-o : Output to a File\n")
    sys.exit(0)

def header():
    start = time.asctime(time.localtime(time.time())) 
    header = "[+] URL\t\t: " + URL + "\n" + "[+] Wordlist\t: " + WORDLIST + "\n" + "[+] Output File\t: " + OUTPUT_FILE + "\n" + "===================================\n" + "Started m4pping : " + start + "\n" + "==================================="
    print(header)
    if (OUTPUT_FILE):
        outputFile = open(OUTPUT_FILE,'w')
        outputFile.write(header)
        outputFile.close()

def footer():
    end = time.asctime(time.localtime(time.time()))
    footer = "===================================\n" + "Finished m4pping : " + end + "\n" + "===================================\n"
    print(footer)
    if (OUTPUT_FILE):
        outputFile = open(OUTPUT_FILE,'w')
        outputFile.write(footer)
        outputFile.close()


def error(c):
    """
    Report errors
    """
    print("Error: " + c)
    sys.exit(-1)

def forward_slash(url):
    """
    Appends a forward slash at the end of the 
    url if there isn't one
    """
    url = list(url)
    if (url[-1] == '/'):
        return "".join(url)
    return "".join(url) + "/"

def m4p():
    """
    Main driver
    """
    if (OUTPUT_FILE):
        outputFile = open(OUTPUT_FILE,'w')

    for word in open(WORDLIST,'r'):
        word = word.strip()
        r = requests.get(URL + word,)
        status_code = r.status_code

        if (status_code in WHITE_LIST):
            print('/' + word + '\t(Status: ' + str(status_code) + ')')
            outputFile.write('/' + word + '\t(Status: ' + str(status_code) + ')\n')

    if (OUTPUT_FILE):
        outputFile.close()
        
        
# ======= Main =======
argv = sys.argv

if (len(argv) < 3):
    usage()
if ('-o' in argv):
    OUTPUT_FILE = argv[argv.index('-o') + 1]

URL = forward_slash(argv[1])
WORDLIST = argv[argv.index('-w') + 1]

header()
m4p()
footer()

    
