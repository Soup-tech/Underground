#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netdb.h>
#include <arpa/inet.h>

#include <dirent.h>

#include <sys/stat.h>
#include <fcntl.h>

using namespace std;

int main() {
	int sockfd, newsockfd, num_of_bytes;
	struct sockaddr_in serv_addr;
	int addrlen = sizeof(serv_addr);
	char buffer[1024];
	
	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	puts("Creating Socket...");
	if (sockfd == -1) {
		puts("Error: Could not make socket");
		exit(1);
	}

	memset(&serv_addr, 0, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_port = htons(8080);
    inet_aton("127.0.0.1", &(serv_addr.sin_addr));	

	puts("Binding socket...");
	if (bind(sockfd, (struct sockaddr *) &(serv_addr), sizeof(serv_addr)) == -1) {
		puts("Error: Could not bind socket");
		exit(1);
	}

	puts("Listening...");
	if (listen(sockfd, 5) == -1) {
		puts("Error: Could not listen");
		exit(1);
	}
	

	newsockfd = accept(sockfd, (struct sockaddr *) &(serv_addr), (socklen_t *)&addrlen);
	if ( accept(sockfd, (struct sockaddr *) &(serv_addr), (socklen_t *) &addrlen) == -1) {
		puts("Error: Could not accept connection");
		exit(1);
	}	
	puts("Accepted connection...");

	
	num_of_bytes = recv(newsockfd, buffer, 1024, 0);

	if (num_of_bytes == -1) {
		puts("ErrorJ: Could not receive");
		exit(1);
	} else if (num_of_bytes == 0) {
		puts("Remote client has closed the connection");
		exit(1);
	}

	printf("%s\n", buffer);
	// send(newsockfd, hello, strlen(hello), 0);
	close(sockfd);
	
}









